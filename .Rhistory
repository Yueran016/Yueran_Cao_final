sessionInfo()
touch test_script.R
touch test_script
cat("hello from cat\n")
message("hello from message")
print("hello from print")
warning("hello from warning")
stop("hello from stop")
cat("hello from cat\n")
message("hello from message")
print("hello from print")
warning("hello from warning")
cat("hello from cat\n")
message("hello from message")
print("hello from print")
warning("hello from warning")
stop("hello from stop")
cat("hello from cat\n")
message("hello from message")
print("hello from print")
warning("hello from warning")
stop("hello from stop")
url_for_data <-" https://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = TRUE)
url_for_data <-"https://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = TRUE)
head(data)
url_for_data <-"https://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = TRUE)
head(data)
The data set has `r nrow(data)` rows and `r ncol(data)` columns
nrow(data)
tinytex::install_tinytex()
# Read in vrc01_data from the web
vrc01_data <- read.csv("https://example.com/vrc01_data.csv")
# Read in vrc01_data from the web
url_for_data <- "https://example.com/vrc01_data.csv"
vrc01_data <- read.csv(url_for_data, header = TRUE)
head(vrc01_data)
# Read in vrc01_data from the web
url_for_data <-"https://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = TRUE)
data <- read.csv(url_for_data, header = TRUE)
head(data)
```{r, echo=FALSE}
mean(data$ab_resistance, na.rm = TRUE)
head(data)
dat <- read.csv("https://bit.ly/vrc01_data, header = TRUE)
\begin{table}
\begin{tabular}{ll}
ID & Score \\
`r dat[1,1]` & `r dat[1,2]` \\
`r dat[2,1]` & `r dat[2,2]` \\
`r dat[1,1]` & `r dat[1,2]` & \\
\end{tabular}
data(mtcars)
View(data)
force(mtcars)
View(mtcars)
plot(mtcars$hp, mtcars$mpg,
xlab = "Horsepower (hp)",
ylab = "Miles Per Gallon (mpg)",
main = "Scatter Plot of MPG vs HP")
plot(mtcars$hp, mtcars$mpg,
xlab = "Horsepower (hp)",
ylab = "Miles Per Gallon (mpg)",
main = "Scatter Plot of MPG vs HP")
# Display the first five rows and first five columns of mtcars in a formatted table
knitr::kable(mtcars[1:5, 1:5], caption = "First 5 Rows and Columns of the mtcars Dataset")
install.packages(labelled)
install.package(labelled)
install.packages("labelled")
install.packages("gtsummary")
install.packages("car")
pacman::p_load(
knitr,
labelled,
gtsummary,
broom.helpers,
dplyr
)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
if(params$antibody == "PGT122") {
url_for_data <- "https://bit.ly/pgt122_data"
} else if(params$antibody == "VRCO1") {
url_for_data <- "https://bit.ly/vrc01_data"
} else {
print("Invalid Input!")
}
data <- read.csv(url_for_data, header = TRUE)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans <- ifelse(data$shield_glycans < 4, "< 4", ">= 4")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
pacman::p_load(
knitr,
labelled,
gtsummary,
broom.helpers,
dplyr,
cardx
)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
pacman::p_load(
knitr,
labelled,
gtsummary,
broom.helpers,
dplyr,
cardx
)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
pacman::p_load(
knitr,
labelled,
gtsummary,
broom.helpers,
dplyr,
cardx
)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
if(params$antibody == "PGT122") {
url_for_data <- "https://bit.ly/pgt122_data"
} else if(params$antibody == "VRCO1") {
url_for_data <- "https://bit.ly/vrc01_data"
} else {
print("Invalid Input!")
}
data <- read.csv(url_for_data, header = TRUE)
if(params$antibody == "PGT122") {
url_for_data <- "https://bit.ly/pgt122_data"
} else if(params$antibody == "VRCO1") {
url_for_data <- "https://bit.ly/vrc01_data"
} else {
print("Invalid Input!")
}
data <- read.csv(url_for_data, header = TRUE)
# Descriptive Analysis
## Tabular analysis
Characteristics of the `r nrow(data)` viruses from the CATNAP database are displayed
```{r, table1}
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans <- ifelse(data$shield_glycans < 4, "< 4", ">= 4")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
#| fig.align = "center",
#| out.width = "100px"
library(ggplot2)
ggplot(data, aes(x = shield_glycans, y = ab_resistance)) +
geom_point() +
geom_smooth(method = lm) +
theme_bw()
mod <- glm(
ab_resistance ~ shield_glycans + region + env_length,
data = data
)
tbl_regression(mod) |>
add_global_p()
tbl_regression(mod) |>
add_global_p()
binary_mod <- glm(
I(ab_resistance > params$cutpoint) ~ shield_glycans + region + env_length,
data = data,
family = binomial()
)
tbl_regression(binary_mod, exponentiate = TRUE) |>
add_global_p()
library(knitr)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
data_url <- "https://bit.ly/vrc01_data"
data <- read.csv(data_url, header = TRUE)
head(data)
head(data)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
head(data)
head(data)
data$number_glycans <- ifelse(data$shield_glycans < 4, "< 4", ">= 4")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
binary_mod <- glm(
I(ab_resistance > params$cutpoint) ~ shield_glycans + region + env_length,
data = data,
family = binomial()
)
```{r, plot-data}
#| fig.align = "center",
#| out.width = "100px"
library(ggplot2)
ggplot(data, aes(x = shield_glycans, y = ab_resistance)) +
geom_point() +
geom_smooth(method = lm) +
theme_bw()
mod <- glm(
ab_resistance ~ shield_glycans + region + env_length,
data = data
)
tbl_regression(mod) |>
add_global_p()
binary_mod <- glm(
I(ab_resistance > params$cutpoint) ~ shield_glycans + region + env_length,
data = data,
family = binomial()
)
length(data$ab_resistance)
length(data$shield_glycans)
length(data$region)
length(data$env_length)
View(data)
binary_mod <- glm(
I(ab_resistance > params$cutpoint) ~ shield_glycans + region + env_length,
data = data,
family = binomial()
)
binary_mod <- glm(
I(ab_resistance > params$cutpoint) ~ shield_glycans + region + env_length,
data = data,
family = binomial(), NA = TRUE
binary_mod <- glm(
I(ab_resistance > params$cutpoint) ~ shield_glycans + region + env_length,
data = data,
family = binomial(), na == TRUE
)
binary_mod <- glm(
I(ab_resistance > params$cutpoint) ~ shield_glycans + region + env_length,
data = data,
family = binomial(),  NA == TRUE
)
sum(is.na(data$shield_glycans))
str(data)
data$ab_resistance <- as.numeric(data$ab_resistance)
data$shield_glycans <- as.numeric(data$shield_glycans)
data$region <- as.numeric(data$region)
data$env_length <- as.numeric(data$env_length)
which(is.na(data$region))
data[which(is.na(data$region)), ]
binary_mod <- glm(
I(ab_resistance > params$cutpoint) ~ shield_glycans + region + env_length,
data = data,
family = binomial(),  NA == TRUE
)
binary_mod <- glm(
I(ab_resistance > params$cutpoint) ~ shield_glycans + region + env_length,
data = data,
family = binomial(),
)
mod <- glm(
ab_resistance ~ shield_glycans + region + env_length,
data = data
)
mod <- glm(
ab_resistance ~ shield_glycans + region + env_length,
data = data
)
library(knitr)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
data_url <- "https://bit.ly/vrc01_data"
data <- read.csv(data_url, header = TRUE)
head(data)
library(labelled)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans <- ifelse(data$shield_glycans < 4, "< 4", ">= 4")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
#| fig.align = "center",
#| out.width = "100px"
library(ggplot2)
ggplot(data, aes(x = shield_glycans, y = ab_resistance)) +
geom_point() +
geom_smooth(method = lm) +
theme_bw()
mod <- glm(
ab_resistance ~ shield_glycans + region + env_length,
data = data
)
table_data <- summary(mod)$coefficients
knitr::kable(data, format, digits = getOption("digits"), row.names = NA,
col.names = NA, align, caption = opts_current$get("tab.cap"),
label = NULL, format.args = list(), escape = TRUE, ...)
knitr::kable(data, format, digits = getOption("digits"), row.names = NA,
col.names = NA, align, caption = opts_current$get("tab.cap"),
label = NULL, format.args = list(), escape = TRUE)
knitr::kable(head(data))
knitr::kable(data, col.names = c('ID', 'Antibody resistance','Shield glycans',
'Region', 'Length of Env protein'))
knitr::kable(data, col.names = c('ID', 'Antibody resistance','Shield glycans',
knitr::kable(data, col.names = c('ID', 'Antibody resistance','Shield glycans',
'Number of Glycans))
knitr::kable(data,
col.names = c('ID', 'Antibody resistance','Shield glycans',
knitr::kable(data,
col.names = c('ID', 'Antibody resistance','Shield glycans',
'Region', 'Length of Env protein',
'Number of Glycans')
)
knitr::kable(data,
col.names = c('ID', 'Antibody resistance','Shield glycans',
'Region', 'Length of Env protein',
'Number of Glycans'), digits = 2,
)
a <- list(hello = "foo", world = "bar")
a <- list(hello = "foo", world = "bar")
paste0(a$hello, "_", a$world)
paste0(a, collapse = "_")
names <- list("Lincoln", "Grant", "Theodore")
ages <- c(4, 2, 0)
paste0(names, ages)
paste0(names, ages)
paste0(names, ages, collapse = "/")
params <- list(
params <- list(ab = c("vrc01", "pgt122"),cutpoint = c(0, 1))
paste0("ab_", params$ab[1], "_", "cut_", params$cutpoint[1], ".rds")
params <- list(ab = c("vrc01", "pgt122"),cutpoint = c(0, 1))
paste0("ab_", params$ab[1], "_", "cut_", params$cutpoint[1], ".rds")
load("~/Downloads/notNormList.rda")
View(objList)
load("~/Downloads/pheno.rda")
load("~/Downloads/metabBeta.rda")
View(objList)
View(objList)
ls()
str(metabBeta)
str(objList)
class(metabBeta)
class(objList)
class(pheno)
View(objList)
load("~/Downloads/pheno.rda")
# Assuming phenoData is a vector, convert it into a data frame
phenoData <- data.frame(phenotype = phenoData)
# Assuming phenoData is a vector, convert it into a data frame
load("~/Downloads/pheno.rda")  # Load the phenotype data
str(pheno)  # Check the structure of the loaded object
phenoData <- data.frame(phenotype = pheno)
View(phenoData)
load("~/Downloads/metabBeta.rda")
phenoData <- data.frame(phenotype = pheno)
load("~/Downloads/notNormList.rda")
View(objList)
View(objList$notNorm_1)
length(objList)
.libPaths()
install.packages("renv")
renv::restore()
setwd("~/Desktop/DATA550_data_toolkit/midterm/data550-midterm-project")
renv::restore()
setwd("~/Desktop/DATA550_data_toolkit/week10_renv/collabrating_renv")
renv::activate
renv::restore()
setwd("~/Desktop/DATA550_data_toolkit/final project")
getwd()
install.packages(c("here", "readr", "ggplot2", "dplyr", "gtsummary", "rmarkdown"))
library(here)
library(readr)
library(ggplot2)
library(dplyr)
library(gtsummary)
library(rmarkdown)
renv::snapshot()
